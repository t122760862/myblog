(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{280:function(t,a,s){"use strict";s.r(a);var e=s(13),v=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Set")]),t._v(" 可以存储任何类型的值,包括引用类型或者基本类型")]),t._v(" "),a("li",[a("code",[t._v("Set")]),t._v(" 的值是唯一的")]),t._v(" "),a("li",[a("code",[t._v("Set")]),t._v(" 的插入是有序的，可以按顺序进行迭代")]),t._v(" "),a("li",[a("code",[t._v("Set")]),t._v(" 的值可以是 "),a("code",[t._v("undefined")]),t._v(", "),a("code",[t._v("null")]),t._v(", 或者 "),a("code",[t._v("NaN")]),t._v(", "),a("code",[t._v("NaN")]),t._v(" 会视为相同的值")])]),t._v(" "),a("h3",{attrs:{id:"使用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[t._v("#")]),t._v(" 使用方法")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  插入一个值")]),t._v("\nSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除一个值，并返回删除前的has()")]),t._v("\nSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否存在该值")]),t._v("\nSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个新的迭代器对象,该对象包含按插入顺序所有值的[value, value]数组,为了跟map对象一致,每个值的键和值相等")]),t._v("\nSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 长度")]),t._v("\nSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通Set.values()")]),t._v("\nSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回值的数组")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),a("ul",[a("li",[t._v("使用"),a("code",[t._v("Array.from")]),t._v("可以将"),a("code",[t._v("Set")]),t._v("转换成数组")]),t._v(" "),a("li",[t._v("使用扩展运算符，可以将"),a("code",[t._v("Set")]),t._v("转换成数组")]),t._v(" "),a("li",[a("code",[t._v("new Set(arr)")]),t._v("可以将数组转换成"),a("code",[t._v("Set")])]),t._v(" "),a("li",[a("code",[t._v("new Set(str)")]),t._v(" 可以将字符串转换成"),a("code",[t._v("Set")])])]),t._v(" "),a("h3",{attrs:{id:"用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用途"}},[t._v("#")]),t._v(" 用途")]),t._v(" "),a("ul",[a("li",[t._v("数组去重")]),t._v(" "),a("li",[t._v("字符串去重")]),t._v(" "),a("li",[t._v("保存待操作 "),a("code",[t._v("DOM")])])]),t._v(" "),a("h2",{attrs:{id:"weakset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakset"}},[t._v("#")]),t._v(" WeakSet")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("WeakSet")]),t._v(" 允许将弱保持"),a("strong",[t._v("对象")]),t._v("存储在一个集合里")]),t._v(" "),a("li",[t._v("只能存储对象,不然会报错: "),a("code",[t._v("Invalid value used in weak set")])]),t._v(" "),a("li",[t._v("若果传入一个可迭代对象作为参数, 对象的值会被自动加入进"),a("code",[t._v("WeakSet")]),t._v("中,如果值是"),a("code",[t._v("null")]),t._v(",会被转为"),a("code",[t._v("undefined")])])]),t._v(" "),a("h3",{attrs:{id:"跟-set-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跟-set-的区别"}},[t._v("#")]),t._v(" 跟 "),a("code",[t._v("set")]),t._v(" 的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Weakset")]),t._v(" 只能是对象的集合,而不是任何类型的集合")]),t._v(" "),a("li",[a("code",[t._v("WeakSet")]),t._v(" 持弱引用,如果没有被引用,则会被垃圾回收")]),t._v(" "),a("li",[a("code",[t._v("WeakSet")]),t._v(" 没有保存当前对象的列表,因此是不能被枚举的")])]),t._v(" "),a("h2",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("map")]),t._v(" 存储键值对")]),t._v(" "),a("li",[a("code",[t._v("map")]),t._v(" 的键值可以是任何类型")]),t._v(" "),a("li",[a("code",[t._v("map")]),t._v(" 的插入是有序的,因此可以按插入顺序进行迭代")])]),t._v(" "),a("h3",{attrs:{id:"map-和-object-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-和-object-的区别"}},[t._v("#")]),t._v(" "),a("code",[t._v("map")]),t._v(" 和 "),a("code",[t._v("object")]),t._v(" 的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("map")]),t._v("的插入是有序的")]),t._v(" "),a("li",[a("code",[t._v("map")]),t._v("的长度可以根据 "),a("code",[t._v("size")]),t._v(" 轻易获取,"),a("code",[t._v("object")]),t._v("的长度需要通过计算")]),t._v(" "),a("li",[a("code",[t._v("map")]),t._v("的默认值只有显示插入的值,"),a("code",[t._v("object")]),t._v("可能会有原型链上的值")]),t._v(" "),a("li",[a("code",[t._v("map")]),t._v("的键值可以是任何值,"),a("code",[t._v("object")]),t._v("的键只能是字符串或者"),a("code",[t._v("symbol")])]),t._v(" "),a("li",[a("code",[t._v("map")]),t._v("可以直接被迭代")]),t._v(" "),a("li",[a("code",[t._v("map")]),t._v("在频繁增删键的情况下,性能更好")])]),t._v(" "),a("h2",{attrs:{id:"weakmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakmap"}},[t._v("#")]),t._v(" WeakMap")]),t._v(" "),a("ul",[a("li",[t._v("key 必须是对象, value 可以是任意值")]),t._v(" "),a("li",[t._v("key 持弱引用")]),t._v(" "),a("li",[t._v("键没有引用将被垃圾回收, 值只有在键没有被回收的时候有效")]),t._v(" "),a("li",[t._v("无法被枚举")])])])}),[],!1,null,null,null);a.default=v.exports}}]);