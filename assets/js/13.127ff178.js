(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{279:function(s,t,a){"use strict";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"path-join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#path-join"}},[s._v("#")]),s._v(" path.join")]),s._v(" "),t("p",[s._v("官网介绍如下:")]),s._v(" "),t("blockquote",[t("p",[t("code",[s._v("path.join()")]),s._v(" 方法使用平台特定的分隔符把全部给定的 "),t("code",[s._v("path")]),s._v(" 片段连接到一起，并规范化生成的路径。")]),s._v(" "),t("p",[s._v("长度为零的 "),t("code",[s._v("path")]),s._v(" 片段会被忽略。 如果连接后的路径字符串是一个长度为零的字符串，则返回 "),t("code",[s._v("'.'")]),s._v("，表示当前工作目录。")])]),s._v(" "),t("p",[s._v("示例:")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/foo'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'baz/asdf'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'quux'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'..'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回: '/foo/bar/baz/asdf'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分析: /foo -> /foo/bar -> /foo/bar/baz/asdf -> /foo/bar/baz/asdf/quuex -> /foo/bar/baz/asdf")]),s._v("\n\npath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 抛出 'TypeError: Path must be a string. Received {}'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"path-resolve"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#path-resolve"}},[s._v("#")]),s._v(" path.resolve")]),s._v(" "),t("p",[s._v("官网介绍如下:")]),s._v(" "),t("blockquote",[t("p",[t("code",[s._v("path.resolve()")]),s._v(" 方法会把一个路径或路径片段的序列解析为一个绝对路径。")]),s._v(" "),t("p",[s._v("给定的路径的序列是从右往左被处理的，后面每个 "),t("code",[s._v("path")]),s._v(" 被依次解析，直到构造完成一个绝对路径。 例如，给定的路径片段的序列为："),t("code",[s._v("/foo")]),s._v("、"),t("code",[s._v("/bar")]),s._v("、"),t("code",[s._v("baz")]),s._v("，则调用 "),t("code",[s._v("path.resolve('/foo', '/bar', 'baz')")]),s._v(" 会返回 "),t("code",[s._v("/bar/baz")]),s._v("。")]),s._v(" "),t("p",[s._v("如果处理完全部给定的 "),t("code",[s._v("path")]),s._v(" 片段后还未生成一个绝对路径，则当前工作目录会被用上。")]),s._v(" "),t("p",[s._v("生成的路径是规范化后的，且末尾的斜杠会被删除，除非路径被解析为根目录。")]),s._v(" "),t("p",[s._v("长度为零的 "),t("code",[s._v("path")]),s._v(" 片段会被忽略。")]),s._v(" "),t("p",[s._v("如果没有传入 "),t("code",[s._v("path")]),s._v(" 片段，则 "),t("code",[s._v("path.resolve()")]),s._v(" 会返回当前工作目录的绝对路径。")])]),s._v(" "),t("p",[s._v("简单理解的话可以当成 "),t("code",[s._v("cd")]),s._v("操作")]),s._v(" "),t("p",[s._v("示例:")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假设当前路径为 /test")]),s._v("\npath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '/test/a/b/c'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分析:  test/a -> test/a/b -> test/a/b/c  ")]),s._v("\n\npath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  '/b/c'  ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  分析:  test/a -> /b -> /b/c")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[s._v("#")]),s._v(" 区别")]),s._v(" "),t("ul",[t("li",[s._v("join是把各个path片段连接在一起， resolve把‘／’当成根目录")]),s._v(" "),t("li",[s._v("resolve在传入非/路径时，会自动加上当前目录形成一个绝对路径，而join仅仅用于路径拼接")])]),s._v(" "),t("h2",{attrs:{id:"dirname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dirname"}},[s._v("#")]),s._v(" __dirname")]),s._v(" "),t("p",[s._v("nodejs 中 "),t("code",[s._v("__dirname")]),s._v("总是指向被执行 js 文件所在文件夹的绝对路径, 类似的还有 "),t("code",[s._v("__filename")]),s._v("表示被执行文件的绝对路径")]),s._v(" "),t("p",[t("code",[s._v("./")]),s._v(" 会返回你执行 node 命令的路径，例如你的工作路径")]),s._v(" "),t("p",[s._v("示例:")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假设当前路径为 /dir1/dir2/test.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在 test.js 中使用__dirname  ")]),s._v("\ncd "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时当前路径为 /dir1")]),s._v("\nnode "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js  \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时 __dirname 为 /dir1/dir2, ./ 为当前工作路径 /dir1, __filename 还是/dir1/dir2/test.js")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"require"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#require"}},[s._v("#")]),s._v(" require")]),s._v(" "),t("p",[t("code",[s._v("require")]),s._v(" 中的路径总是相对于包含它的文件，跟你的工作目录没有关系。")])])}),[],!1,null,null,null);t.default=e.exports}}]);