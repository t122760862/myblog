(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{280:function(e,t,a){"use strict";a.r(t);var o=a(13),r=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"背景与简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#背景与简介"}},[e._v("#")]),e._v(" 背景与简介")]),e._v(" "),t("p",[e._v("早期的互联网可能只有一个server, 所有的功能都在一个系统上:")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/t122760862/blogimg@main/%E5%8D%95%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E5%9B%BE.png",alt:""}})]),e._v(" "),t("p",[e._v("随着互联网的发展, 业务变的复杂, 系统也越来越庞大, 为了合理利用资源以及降低耦合性, 于是把单系统拆分成多个子系统:")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/t122760862/blogimg@main/%E5%A4%9A%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E5%9B%BE.png",alt:""}})]),e._v(" "),t("p",[e._v("这样就带来一个问题：如果让用户在不同子系统之间都去登录是一件体验很差的事。")]),e._v(" "),t("p",[e._v("在这样的背景下，单点登录悄然诞生。")]),e._v(" "),t("p",[e._v("单点登录（Single Sign-On，简称 SSO）是一种常用的身份验证技术，可以让用户在不同的系统或应用程序之间共享身份信息，避免重复登录。在一个基于单点登录的系统中，用户只需要登录一次，就可以获得访问所有关联应用程序的权限，而不需要在每个应用程序中单独进行身份验证。")]),e._v(" "),t("h3",{attrs:{id:"单系统登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单系统登录"}},[e._v("#")]),e._v(" 单系统登录")]),e._v(" "),t("p",[e._v("由于HTTP属于无状态协议，因此服务器不能确认用户信息。为了解决这个问题，W3C提出"),t("strong",[e._v("cookie")]),e._v("的概念：")]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("HTTP cookie")]),e._v("，简称"),t("strong",[e._v("cookie")]),e._v("，是"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%94%A8%E6%88%B7_(%E8%AE%A1%E7%AE%97%E6%9C%BA)",target:"_blank",rel:"noopener noreferrer"}},[e._v("用户"),t("OutboundLink")],1),e._v("浏览"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%BD%91%E7%AB%99",target:"_blank",rel:"noopener noreferrer"}},[e._v("网站"),t("OutboundLink")],1),e._v("时由"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E5%99%A8",target:"_blank",rel:"noopener noreferrer"}},[e._v("网络服务器"),t("OutboundLink")],1),e._v("创建并由用户的"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%BD%91%E9%A1%B5%E6%B5%8F%E8%A7%88%E5%99%A8",target:"_blank",rel:"noopener noreferrer"}},[e._v("网页浏览器"),t("OutboundLink")],1),e._v("存放在用户电脑或其他设备上的小文本文件。")])]),e._v(" "),t("p",[e._v("通过"),t("strong",[e._v("cookie")]),e._v("使web服务器能够在用户的设备上存储状态信息,以此来确认用户的身份或者记录一些别的信息.")]),e._v(" "),t("p",[e._v("一个"),t("strong",[e._v("cookie")]),e._v("可能有多个属性: Domain、Path、Expires、Max-Age、Secure、HttpOnly，")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[e._v("set"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("cookie"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[e._v("CONSOLE_SID")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("e2567d6702380ae34447d1296069687ca9aef75179150868d22c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" Path"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" Domain"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("zego"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("im"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" Expires"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("Thu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("30")]),e._v(" Mar "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2023")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("13")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("02")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("15")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[e._v("GMT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" Max"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Age"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2592000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" SameSite"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("Lax\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/t122760862/blogimg@main/cookie%E5%B1%9E%E6%80%A7.png",alt:""}})]),e._v(" "),t("h4",{attrs:{id:"domain和path"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#domain和path"}},[e._v("#")]),e._v(" Domain和Path")]),e._v(" "),t("p",[t("code",[e._v("Domain")]),e._v("和"),t("code",[e._v("Path")]),e._v("属性定义了cookie的范围。它们告诉浏览器cookie属于哪个网站。Cookies只能设置在当前资源的顶级域及其子域上。")]),e._v(" "),t("p",[e._v("如果服务器未指定cookie的"),t("code",[e._v("Domain")]),e._v("和"),t("code",[e._v("Path")]),e._v("，则它们默认为所请求资源的域和路径。")]),e._v(" "),t("h4",{attrs:{id:"expires和max-age"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expires和max-age"}},[e._v("#")]),e._v(" Expires和Max-Age")]),e._v(" "),t("p",[t("code",[e._v("Expires")]),e._v("属性定义了浏览器应该删除cookie的时间，格式为"),t("code",[e._v("Wdy, DD Mon YYYY HH:MM:SS GMT")]),e._v("，或者"),t("code",[e._v("Wdy, DD Mon YY HH:MM:SS GMT")]),e._v("（其中YY大于或等于0并且小于等于69）。")]),e._v(" "),t("p",[e._v("此外，也可使用"),t("code",[e._v("Max-Age")]),e._v("将cookie的过期时间设置为某一段时间之后（相对于浏览器接收cookie的时间而言）。但一些浏览器可能不支持"),t("code",[e._v("Max-Age")]),e._v("，如Internet Explorer。")]),e._v(" "),t("h4",{attrs:{id:"secure和httponly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#secure和httponly"}},[e._v("#")]),e._v(" Secure和HttpOnly")]),e._v(" "),t("p",[t("code",[e._v("Secure")]),e._v("属性旨在将cookie加密，使浏览器仅通过"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE",target:"_blank",rel:"noopener noreferrer"}},[e._v("安全/加密"),t("OutboundLink")],1),e._v("连接使用cookie。")]),e._v(" "),t("p",[t("code",[e._v("HttpOnly")]),e._v("要求浏览器不要通过HTTP（和HTTPS）以外的渠道使用cookie。这意味着无法通过客户端脚本语言（尤其是"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/JavaScript",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScript"),t("OutboundLink")],1),e._v("）访问cookie，因此无法通过"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC",target:"_blank",rel:"noopener noreferrer"}},[e._v("跨站点脚本攻击"),t("OutboundLink")],1),e._v("轻易窃取。")]),e._v(" "),t("h4",{attrs:{id:"samesite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#samesite"}},[e._v("#")]),e._v(" SameSite")]),e._v(" "),t("p",[e._v("Chrome 51 开始，浏览器的 Cookie 新增加了一个"),t("code",[e._v("SameSite")]),e._v("属性，用来防止 CSRF 攻击和用户追踪。\n它可以设置三个值:")]),e._v(" "),t("ul",[t("li",[e._v("Strict: "),t("code",[e._v("Strict")]),e._v("最为严格，完全禁止第三方 Cookie，跨站点时，任何情况下都不会发送 Cookie。换言之，只有当前网页的 URL 与请求目标一致，才会带上 Cookie。")]),e._v(" "),t("li",[e._v("Lax: "),t("code",[e._v("Lax")]),e._v("规则稍稍放宽，大多数情况也是不发送第三方 Cookie，但是导航到目标网址的 Get 请求除外。")]),e._v(" "),t("li",[e._v("None: 网站可以选择显式关闭"),t("code",[e._v("SameSite")]),e._v("属性，将其设为"),t("code",[e._v("None")]),e._v("。不过，前提是必须同时设置"),t("code",[e._v("Secure")]),e._v("属性（Cookie 只能通过 "),t("strong",[e._v("HTTPS")]),e._v(" 协议发送），否则无效。")])]),e._v(" "),t("p",[e._v("利用cookie的特性, 可以非常容易的实现单系统登录:")]),e._v(" "),t("ol",[t("li",[e._v("用户登录时, 验证账号密码")]),e._v(" "),t("li",[e._v("验证成功, 生成一个凭证 Token 保存在数据库中, 同时将Token写入Cookie中")]),e._v(" "),t("li",[e._v("用户请求时会自动带上Cookie, 通过与保存的Token作比较来判断是否登录")])]),e._v(" "),t("h3",{attrs:{id:"单点登录的实现方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单点登录的实现方式"}},[e._v("#")]),e._v(" 单点登录的实现方式")]),e._v(" "),t("h4",{attrs:{id:"同主域下可以利用-cookie-来实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同主域下可以利用-cookie-来实现"}},[e._v("#")]),e._v(" 同主域下可以利用 cookie 来实现")]),e._v(" "),t("p",[e._v("如果将鉴权 cookie 种在主域名下, 如 "),t("code",[e._v("zego.im")]),e._v(", 当通过 "),t("code",[e._v("a.zego.im")]),e._v("登录后, 后续"),t("code",[e._v("x.zego.im")]),e._v("下的域名都能携带该鉴权 token, 从而实现多端登录.")]),e._v(" "),t("p",[e._v("这种方式实现起来比较简单, 但是限制也比较大:")]),e._v(" "),t("ol",[t("li",[e._v("只适用于"),t("strong",[e._v("只有相同主域的系统应用")])]),e._v(" "),t("li",[e._v("不同系统应用之间使用同一套鉴权系统")])]),e._v(" "),t("p",[e._v("若系统应用对于域名没有什么要求, 那么可以使用该方案轻易实现单点登录, 事实上早期很多应用都会采用该方式")]),e._v(" "),t("h4",{attrs:{id:"不同主域下利用-cookie-samesite-来实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不同主域下利用-cookie-samesite-来实现"}},[e._v("#")]),e._v(" 不同主域下利用 cookie + SameSite 来实现")]),e._v(" "),t("p",[e._v("该方案跟同域 cookie 实现差不多, 不同之处在于 web 端的访问域名可以跟鉴权 cookie 所在的主域名下不一样, 如:  当通过 "),t("code",[e._v("a.zego.im")]),e._v("登录后, 将鉴权 cookie 种在"),t("code",[e._v("zego.im")]),e._v("下, 后续的 web 端应用可以使用如"),t("code",[e._v("x.zego.cloud")]),e._v("之类的域名访问"),t("code",[e._v("x.zego.im")]),e._v("下的后台服务, 通过携带之前携带的鉴权 cookie 来进行身份确认.")]),e._v(" "),t("p",[e._v("一般来说跨站点携带 cookie 会存在一些安全隐患, Chrome 51 开始 新增一个 "),t("code",[e._v("SameSite")]),e._v("属性对该行为进行限制")]),e._v(" "),t("p",[e._v("不仅如此, 浏览器端也对该行为做出限制, 即使后台准备工作都做好, 还需要客户使用的浏览器开启允许携带第三方cookie才能生效")]),e._v(" "),t("p",[e._v("以 chrome 为例:")]),e._v(" "),t("p",[e._v("![](https://cdn.jsdelivr.net/gh/t122760862/blogimg@main/chrome - 允许第三方登录.png)")]),e._v(" "),t("p",[e._v("要实现该方案有这几个前提:")]),e._v(" "),t("ol",[t("li",[e._v("SameSite 值为 None, 同时开启 "),t("code",[e._v("Secure")]),e._v(" 属性才生效即"),t("code",[e._v("https")])]),e._v(" "),t("li",[e._v("浏览器开启允许携带第三方 cookie")])]),e._v(" "),t("p",[e._v("比较致命的一点在于若用户浏览器没有支持第三方 cookie, 那么该方案只有副作用, 会导致用户不能登录, 因为无法携带 cookie.")]),e._v(" "),t("h4",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[e._v("#")]),e._v(" 使用")])])}),[],!1,null,null,null);t.default=r.exports}}]);