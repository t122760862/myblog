(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{276:function(e,r,s){"use strict";s.r(r);var a=s(13),o=Object(a.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"记录一次-docker-的学习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#记录一次-docker-的学习"}},[e._v("#")]),e._v(" 记录一次 docker 的学习")]),e._v(" "),r("h2",{attrs:{id:"docker-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-简介"}},[e._v("#")]),e._v(" docker 简介")]),e._v(" "),r("p",[r("strong",[e._v("docker")]),e._v("本身是由 dotCloud 公司在公司内部发起的一个项目，使用 go 语言进行编写。由于项目的火爆，在 2013 年 dotCloud 公司更名为"),r("strong",[e._v("docker")]),e._v("。"),r("br"),e._v("\n特点：")]),e._v(" "),r("ul",[r("li",[e._v("docker 不需要进行硬件虚拟以及运行操作系统等操作，因此 docker 对系统的资源占有率很低，同时启动速度也十分迅速，可以做到秒级甚至毫秒级的启动时间，极大的提高了效率。")]),e._v(" "),r("li",[e._v("docker 具有除内核外完整的运行环境，确保了运行环境的一致性，因此保证各个运行环境以及不同平台之间的表现一致性。")]),e._v(" "),r("li",[e._v("持续化部署。使用 Docker 可以通过定制应用镜像来实现持续集成、持续交付、部署。")])]),e._v(" "),r("p",[e._v("基本概念：")]),e._v(" "),r("ul",[r("li",[e._v("镜像（images）: 简单来说就是一个特殊的文件系统，提供容器运行时所需的程序，库以及配置参数等资源。镜像不包含任何动态数据，构建之后也不会被改变。")]),e._v(" "),r("li",[e._v("容器（container）: 容器是镜像运行的实体，基于镜像层运行。")]),e._v(" "),r("li",[e._v("仓库（Repository）: 集中存储和分发镜像的仓库或者服务中心。最常是用的是官方的"),r("a",{attrs:{href:"https://hub.docker.com/search?q=&type=image&image_filter=official",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker hub"),r("OutboundLink")],1),e._v("。")])]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"安装-docker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker"}},[e._v("#")]),e._v(" 安装 docker")]),e._v(" "),r("p",[e._v("下面介绍 docker 的脚本安装方式\n旧版本的 Docker 称为 docker 或者 docker-engine，使用以下命令卸载旧版本：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("sudo apt-get remove docker \\\n             docker-engine \\\n             docker.io\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br")])]),r("p",[e._v("使用脚本自动安装，由于国内的访问官方资源太慢，使用国内镜像来加快下载速度")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 获取docker安装脚本\ncurl -fsSL get.docker.com -o get-docker.sh\nsudo sh get-docker.sh --mirror Aliyun\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br")])]),r("p",[e._v("安装完毕如可以获取版本信息则安装成功:"),r("code",[e._v("docker --version")]),r("br"),e._v("\n默认情况下，docker 需要 sudo 权限才能执行大多数命令，因此可以将使用 docker 的用户加入 docker 用户组")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 创建docker用户组\nsudo groupadd docker\n\n// 将当前用户加入docker用户组\nsudo usermod -aG docker $USER\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br")])]),r("hr"),e._v(" "),r("h2",{attrs:{id:"docker-的常用指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-的常用指令"}},[e._v("#")]),e._v(" docker 的常用指令")]),e._v(" "),r("p",[e._v("启动 docker："),r("code",[e._v("sudo systemctl start docker")]),r("br"),e._v("\n获取镜像： "),r("code",[e._v("docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]")]),e._v("\n运行镜像："),r("code",[e._v("docker run --rm --name [name] 镜像名:版本")])]),e._v(" "),r("ul",[r("li",[r("code",[e._v("--rm")]),e._v(": 这个参数是说容器运行结束后删除该容器。默认情况下退出的容器为了查看日志等信息不会立即删除，使用该参数可以退出立即删除从而节省时间。")]),e._v(" "),r("li",[r("code",[e._v("--name")]),e._v(": 为运行的容器取一个自定义的 name。")])]),e._v(" "),r("p",[e._v("列出镜像: "),r("code",[e._v("docker image ls")]),e._v(" or "),r("code",[e._v("docker images")]),r("br"),e._v("\n查看镜像占用空间: "),r("code",[e._v("docker system df")]),r("br"),e._v("\n删除镜像: "),r("code",[e._v("docker image rm [选项] <镜像1> [<镜像2> ...]")]),e._v(" or "),r("code",[e._v("docker rmi [镜像名]/[id]")]),r("br"),e._v("\n删除容器: "),r("code",[e._v("docker container rm [容器]")]),e._v(" or "),r("code",[e._v("docker container rm -f [容器] // 删除一个运行中的容器")])]),e._v(" "),r("ul",[r("li",[r("code",[e._v("<镜像>")]),e._v(": 可以是 镜像短 ID、镜像长 ID、镜像名 或者 镜像摘要")]),e._v(" "),r("li",[r("code",[e._v("<短 ID>")]),e._v(": 一搬来说删除的时候取长 Id 的前三个字符以上，足够区分别的镜像时的 Id")])])])}),[],!1,null,null,null);r.default=o.exports}}]);